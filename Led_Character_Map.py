from Matrix import Matrix

#declaration of char_map
char_map = {
        'a' : Matrix(5, 3, [(0,1,1), (1,0,1), (1,2,1), (2,0,1), (2,1,1), (2,2,1), (3,0,1), (3,2,1), (4,0,1), (4,2,1)]),
        'b' : Matrix(5, 3, [(0,0,1), (0,1,1), (1,0,1), (1,1,1), (2,0,1), (2,1,1), (2,2,1), (3,0,1), (3,2,1), (4,0,1), (4,1,1), (4,2,1)]), #LOOKS A LITTLE WEIRD
        'c' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,0,1), (2,0,1), (3,0,1), (4,0,1), (4,1,1), (4,2,1)]),
        'd' : Matrix(5, 3, [(0,0,1), (0,1,1), (1,0,1), (1,2,1), (2,0,1), (2,2,1), (3,0,1), (3,2,1), (4,0,1), (4,1,1)]),
        'e' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,0,1), (2,0,1), (2,1,1), (2,2,1), (3,0,1), (4,0,1), (4,1,1), (4,2,1)]),
        'f' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,0,1), (2,0,1), (2,1,1), (3,0,1), (4,0,1)]),
        'g' : Matrix(5, 4, [(0,0,1), (0,1,1), (0,2,1), (1,0,1), (2,0,1), (3,0,1), (3,2,1), (3,3,1), (4,0,1), (4,1,1), (4,2,1), (4,3,1)]), #LOOKS A LITTLE WEIRD
        'h' : Matrix(5, 3, [(0,0,1), (0,2,1), (1,0,1), (1,2,1), (2,0,1), (2,1,1), (2,2,1), (3,0,1), (3,2,1), (4,0,1), (4,2,1)]),
        'i' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,1,1), (2,1,1), (3,1,1), (4,0,1), (4,1,1), (4,2,1)]),
        'j' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,1,1), (2,1,1), (3,1,1), (4,0,1), (4,1,1)]),
        'k' : Matrix(5, 3, [(0,0,1), (0,2,1), (1,0,1), (1,1,1), (2,0,1), (3,0,1), (3,1,1), (4,0,1), (4,2,1)]),
        'l' : Matrix(5, 3, [(0,0,1), (1,0,1), (2,0,1), (3,0,1), (4,0,1), (4,1,1), (4,2,1)]),
        'm' : Matrix(5, 4, [(0,0,1), (0,3,1), (1,0,1), (1,1,1), (1,2,1), (1,3,1), (2,0,1), (2,3,1), (3,0,1), (3,3,1), (4,0,1), (4,3,1)]), #LOOKS A LITTLE WEIRD
        'n' : Matrix(5, 3, [(0,0,1), (0,1,1), (1,0,1), (1,2,1), (2,0,1), (2,2,1), (3,0,1), (3,2,1), (4,0,1), (4,2,1)]), #LOOKS VERY WEIRD
        'o' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,0,1), (1,2,1), (2,0,1), (2,2,1), (3,0,1), (3,2,1), (4,0,1), (4,1,1), (4,2,1)]),
        'p' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,0,1), (1,2,1), (2,0,1), (2,1,1), (2,2,1), (3,0,1), (4,0,1)]),
        'q' : Matrix(5, 5, [(0,1,1), (0,2,1), (1,0,1), (1,3,1), (2,0,1), (2,2,1), (2,3,1), (3,0,1), (3,3,1), (4,1,1), (4,2,1), (4,4,1)]), #LOOKS WEIRD
        'r' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,0,1), (1,2,1), (2,0,1), (2,1,1), (2,2,1), (3,0,1), (3,1,1), (4,0,1), (4,2,1)]),
        's' : Matrix(5, 3, [(0,1,1), (0,2,1), (1,0,1), (2,0,1), (2,1,1), (3,2,1), (4,0,1), (4,1,1)]), #LOOKS A LITTLE WEIRD
        't' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,1,1), (2,1,1), (3,1,1), (4,1,1)]),
        'u' : Matrix(5, 3, [(0,0,1), (0,2,1), (1,0,1), (1,2,1), (2,0,1), (2,2,1), (3,0,1), (3,2,1), (4,0,1), (4,1,1), (4,2,1)]),
        'v' : Matrix(5, 3, [(0,0,1), (0,2,1), (1,0,1), (1,2,1), (2,0,1), (2,2,1), (3,0,1), (3,2,1), (4,1,1)]),
        'w' : Matrix(5, 4, [(0,0,1), (0,3,1), (1,0,1), (1,3,1), (2,0,1), (2,3,1), (3,0,1), (3,1,1), (3,2,1), (3,3,1), (4,0,1), (4,3,1)]), #LOOKS A LITTLE WEIRD
        'x' : Matrix(5, 3, [(0,0,1), (0,2,1), (2,1,1), (4,0,1), (4,2,1)]), #LOOKS A LITTLE WEIRD
        'y' : Matrix(5, 3, [(0,0,1), (0,2,1), (1,0,1), (1,2,1), (2,1,1), (3,1,1), (4,1,1)]),
        'z' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (2,1,1), (4,0,1), (4,1,1), (4,2,1)]), #LOOKS A LITTLE WEIRD
        '0' : Matrix(5, 3, [(0,1,1), (1,0,1), (1,2,1), (2,0,1), (2,2,1), (3,0,1), (3,2,1), (4,1,1)]),
        '1' : Matrix(5, 3, [(0,1,1), (1,0,1), (1,1,1), (2,1,1), (3,1,1), (4,0,1), (4,1,1), (4,2,1)]),
        '2' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,2,1), (2,0,1), (2,1,1), (2,2,1), (3,0,1), (4,0,1), (4,1,1), (4,2,1)]),
        '3' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,2,1), (2,0,1), (2,1,1), (2,2,1), (3,2,1), (4,0,1), (4,1,1), (4,2,1)]),
        '4' : Matrix(5, 3, [(0,0,1), (0,2,1), (1,0,1), (1,2,1), (2,0,1), (2,1,1), (2,2,1), (3,2,1), (4,2,1)]),
        '5' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,0,1), (2,0,1), (2,1,1), (2,2,1), (3,2,1), (4,0,1), (4,1,1), (4,2,1)]),
        '6' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,0,1), (2,0,1), (2,1,1), (2,2,1), (3,0,1), (3,2,1), (4,0,1), (4,1,1), (4,2,1)]),
        '7' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,2,1), (2,2,1), (3,2,1), (4,2,1)]),
        '8' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,0,1), (1,2,1), (2,0,1), (2,1,1), (2,2,1), (3,0,1), (3,2,1), (4,0,1), (4,1,1), (4,2,1)]),
        '9' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,0,1), (1,2,1), (2,0,1), (2,1,1), (2,2,1), (3,2,1), (4,2,1)]),
        '.' : Matrix(5, 1, [(4,0,1)]),
        ',' : Matrix(5, 2, [(2,1,1), (3,1,1), (4,0,1)]),
        ';' : Matrix(5, 2, [(1,1,1), (3,1,1), (4,0,1)]),
        ':' : Matrix(5, 1, [(1,0,1), (3,0,1)]),
        '!' : Matrix(5, 1, [(0,0,1), (1,0,1), (2,0,1), (4,0,1)]),
        '?' : Matrix(5, 3, [(0,0,1), (0,1,1), (0,2,1), (1,2,1), (2,1,1), (2,2,1), (3,1,1), (4,1,1)]), #LOOKS A LITTLE WEIRD
        '/' : Matrix(5, 3, [(0,2,1), (2,1,1), (4,0,1)]), #LOOKS A LITTLE WEIRD
        '"' : Matrix(5, 3, [(0,0,1), (0,1,1), (1,0,1), (1,1,1)]),
        ' ' : Matrix(5, 1),
        '\'' : Matrix(5, 1, [(0,0,1), (1,0,1)])
        }


#char_map['Q'].test_display()

def display_phrase(phrase):
    count = 0
    result = None
    for char in phrase:
        temp = char_map[char]
        if (count == 0):
            result = temp
            result = result.concatenate(Matrix(5,1))
        else:
            result = result.concatenate(temp)
            result = result.concatenate(Matrix(5,1))
        count = count + 1
    result.test_display()


display_phrase("sobriquet")
